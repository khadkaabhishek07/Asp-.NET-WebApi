// <auto-generated />
using System;
using Computing3.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Computing3.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240325152722_BookRentsAdded")]
    partial class BookRentsAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Computing3.Models.Student.Bill", b =>
                {
                    b.Property<int>("Bill_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Bill_ID"));

                    b.Property<DateOnly>("Issued_Date")
                        .HasColumnType("date");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Bill_ID");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("Computing3.Models.Student.BookRent", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<DateOnly>("Rented_Date")
                        .HasColumnType("date");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId");

                    b.HasIndex("StudentId");

                    b.ToTable("BookRents");
                });

            modelBuilder.Entity("Computing3.Models.Student.Student", b =>
                {
                    b.Property<int>("LMUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LMUID"));

                    b.Property<string>("Hobby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LMUID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Computing3.Models.Student.Bill", b =>
                {
                    b.HasOne("Computing3.Models.Student.Student", "Student")
                        .WithOne("Bill")
                        .HasForeignKey("Computing3.Models.Student.Bill", "StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Computing3.Models.Student.BookRent", b =>
                {
                    b.HasOne("Computing3.Models.Student.Student", "Student")
                        .WithMany("BookRents")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Computing3.Models.Student.Student", b =>
                {
                    b.Navigation("Bill");

                    b.Navigation("BookRents");
                });
#pragma warning restore 612, 618
        }
    }
}
